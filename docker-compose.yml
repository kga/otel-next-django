services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: userdb
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpassword
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 5s
      timeout: 5s
      retries: 10

  otel-collector-next-django:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector-next-django
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector/config.yaml:/etc/otel-collector-config.yaml
    env_file: .env
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "13133:13133" # health_check

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: django-backend
    environment:
      DEBUG: "True"
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: userdb
      DB_USER: dbuser
      DB_PASSWORD: dbpassword
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector-next-django:4317
      OTEL_SERVICE_NAME: django-backend
      OTEL_TRACES_EXPORTER: otlp
      OTEL_METRICS_EXPORTER: none
      OTEL_LOGS_EXPORTER: none
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
      otel-collector-next-django:
        condition: service_started

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs-frontend
    environment:
      BACKEND_URL: http://backend:8000
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector-next-django:4317
      OTEL_SERVICE_NAME: nextjs-frontend
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
      - otel-collector-next-django

volumes:
  mysql_data:
